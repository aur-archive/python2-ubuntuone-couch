=== modified file 'setup.py'
--- setup.py	2011-06-13 19:58:20 +0000
+++ setup.py	2011-10-19 16:07:17 +0000
@@ -1,5 +1,5 @@
 #!/usr/bin/env python
-# setup.py - Build system for Ubuntu SSO Client package
+# setup.py - Build system for Ubuntu One Couch Client package
 #
 # Author: Natalia B. Bidart <natalia.bidart@canonical.com>
 #         Eric Casteleijn <eric.casteleijn@canonical.com>

=== modified file 'ubuntuone/couch/auth.py'
--- ubuntuone/couch/auth.py	2011-08-09 13:09:48 +0000
+++ ubuntuone/couch/auth.py	2011-10-19 16:07:17 +0000
@@ -17,26 +17,29 @@
 import dbus
 import httplib2
 import logging
-import ubuntu_sso
 import urlparse
 
 from gettext import gettext as _
 from oauth import oauth
 from dbus.mainloop.glib import DBusGMainLoop
 
+from ubuntuone.platform.credentials.linux import (
+    DBUS_BUS_NAME,
+    DBUS_CREDENTIALS_PATH,
+)
+
 DBusGMainLoop(set_as_default=True)
 
 import socket
 socket.setdefaulttimeout(5)
 
-APP_NAME = "Ubuntu One"
 HMAC_SHA1 = oauth.OAuthSignatureMethod_HMAC_SHA1()
 PLAINTEXT = oauth.OAuthSignatureMethod_PLAINTEXT()
-NO_CREDENTIALS = _('No OAuth credentials passed in or found in Ubuntu SSO.')
+NO_CREDENTIALS = _('No OAuth credentials passed in or found in the system.')
 
 
 class CredentialsNotFound(Exception):
-    """Exception for missing data in SSO."""
+    """Exception for missing data in the credentials system."""
 
     def __init__(self, key):            # pylint: disable=W0231
         self.key = key
@@ -63,19 +66,22 @@
 
     DBusGMainLoop(set_as_default=True)
 
+    # Do not replicate this oauth code somewhere else, find_credentials_sync
+    # should NOT be used, use ubuntuone.credentials.CredentialsManagementTool
+    # instead.
+
     bus = dbus.SessionBus()
     proxy = bus.get_object(
-        ubuntu_sso.DBUS_BUS_NAME, ubuntu_sso.DBUS_CRED_PATH,
+        DBUS_BUS_NAME, DBUS_CREDENTIALS_PATH,
         follow_name_owner_changes=True)
     logging.info(
-        'get_oauth_data: asking for credentials from Ubuntu SSO. App name: %s',
-        APP_NAME)
+        'get_oauth_data: asking for credentials from the system.')
     oauth_data = dict(
         (_undbusify(k), _undbusify(v)) for k, v in
-        proxy.find_credentials(APP_NAME).iteritems())
+        proxy.find_credentials_sync().iteritems())
     if len(oauth_data) > 0:
         logging.info(
-            'get_oauth_data: Got non emtpy credentials from Ubuntu SSO.')
+            'get_oauth_data: Got non emtpy credentials from the system.')
     credentials = {}
     for key in ('consumer_key', 'consumer_secret', 'token', 'token_secret'):
         try:
@@ -119,8 +125,8 @@
     if access_token is None or consumer_key is None:
         try:
             credentials = get_oauth_credentials()
-        except CredentialsNotFound, e:
-            logging.error('No credentials found in SSO. %s', e)
+        except CredentialsNotFound:
+            logging.exception('No credentials found in the system:')
             return NO_CREDENTIALS
         access_token = credentials['token']
         token_secret = credentials['token_secret']

=== modified file 'ubuntuone/tests/test_auth.py'
--- ubuntuone/tests/test_auth.py	2011-05-24 18:02:39 +0000
+++ ubuntuone/tests/test_auth.py	2011-10-19 16:07:17 +0000
@@ -14,16 +14,19 @@
 
 """Tests for ubuntuone.couch.sign."""
 
-import ubuntu_sso
-
 from twisted.trial.unittest import TestCase
 from mocker import Mocker, ANY
+from oauth import oauth
+
 from ubuntuone.couch import auth
-from oauth import oauth
-
 from ubuntuone.couch.auth import (
-    APP_NAME, HMAC_SHA1, get_oauth_request_header, get_oauth_credentials,
+    HMAC_SHA1, get_oauth_request_header, get_oauth_credentials,
     get_oauth_token, request, CredentialsNotFound, NO_CREDENTIALS)
+from ubuntuone.platform.credentials.linux import (
+    DBUS_BUS_NAME,
+    DBUS_CREDENTIALS_PATH,
+)
+
 
 CONSUMER_KEY = u'this_consumer_key'
 CONSUMER_SECRET = u'sssssh!'
@@ -84,11 +87,11 @@
         self.mocker.replace("dbus.mainloop.glib.DBusGMainLoop")
         bus = dbus.SessionBus()
         bus.get_object(
-            ubuntu_sso.DBUS_BUS_NAME, ubuntu_sso.DBUS_CRED_PATH,
+            DBUS_BUS_NAME, DBUS_CREDENTIALS_PATH,
             follow_name_owner_changes=True)
         mock_proxy = self.mocker.mock()
         self.mocker.result(mock_proxy)
-        mock_proxy.find_credentials(APP_NAME)
+        mock_proxy.find_credentials_sync()
         self.mocker.result({
             u'token': TOKEN_KEY,
             u'token_secret': TOKEN_SECRET,
@@ -129,7 +132,7 @@
         self.assertEquals(fake_result, result)
 
     def test_request_no_oauth_credentials(self):
-        """Test a request with no oauth credentials in SSO."""
+        """Test a request with no oauth credentials in the system."""
         mock_get_oauth_credentials = self.mocker.replace(
             'ubuntuone.couch.auth.get_oauth_credentials')
         mock_get_oauth_credentials()

